instances:
  <% @instances.each do |i| -%>
  - host: <%= i['host'] %>
    port: <%= i['port'] %>
    <% if i['name'] -%>
    name: <%= i['name'] %>
    <% end -%>
    <% if i['user'] -%>
    user: <%= i['user'] %>
    <% end -%>
    <% if i['password'] -%>
    password: <%= i['password'] %>
    <% end -%>
    <% if i['process_name_regex'] and i['tools_jar_path'] -%>
    process_name_regex: <%= i['process_name_regex'] %> # Instead of specifying a host, and port. The agent can connect using the attach api.
                                                       # This requires the JDK to be installed and the path to tools.jar to be set below.
    tools_jar_path: <%= i['tools_jar_path'] %>
    <% end -%>
    <% if i['java_bin_path'] -%>
    java_bin_path: <%= i['java_bin_path'] %> #Optional, should be set if the agent cannot find your java executable
    <% end -%>
    <% if i['trust_store_path'] -%>
    trust_store_path: <%= i['trust_store_path'] %> # Optional, should be set if ssl is enabled
    <% end -%>
    <% if i['trust_store_password'] -%>
    trust_store_password: <%= i['trust_store_password'] %>
    <% end -%>
    <% if i.key?('tags') -%>
    tags:
      <% i['tags'].each do |k, v| -%>
      <%= k %>: <%= v %>
      <% end -%>
    <% end -%>
  <% end -%>

init_config:
  is_jmx: true

  conf:
    - include:
        domain: 'kafka.rest'
        bean: 'kafka.rest:type=jetty-metrics'
        attribute:
          connections-active:
            metric_type: gauge
            alias: kafka-rest.con_active
          connections-accepted-rate:
            metric_type: gauge
            alias: kafka-rest.con_acc_rate
    - include:
        domain: 'kafka.rest'
        bean: 'kafka.rest:type=jersey-metrics'
        attribute:
          topic.produce-avro.request-byte-rate:
            metric_type: gauge
            alias: kafka-rest.topic_produce_avro_byte_rate
          topic.produce-avro.request-error-rate:
            metric_type: gauge
            alias: kafka-rest.topic_produce_avro_error_rate
          topic.produce-avro.request-latency-avg:
            metric_type: gauge
            alias: kafka-rest.topic_produce_avro_request_latency
          topic.produce-avro.request-rate:
            metric_type: gauge
            alias: kafka-rest.topic_produce_avro_request_rate
          topic.produce-avro.request-size-avg:
            metric_type: gauge
            alias: kafka-rest.topic_produce_avro_request_avg
          topic.produce-avro.response-rate:
            metric_type: gauge
            alias: kafka-rest.topic_produce_avro_response_rate
          consumer.topic.read-avro.request-byte-rate:
            metric_type: gauge
            alias: kafka-rest.read_avro_byte_rate
          consumer.topic.read-avro.request-error-rate:
            metric_type: gauge
            alias: kafka-rest.read_avro_error_rate
          consumer.topic.read-avro.request-latency-avg:
            metric_type: gauge
            alias: kafka-rest.read_avro_request_latency
          consumer.topic.read-avro.request-rate:
            metric_type: gauge
            alias: kafka-rest.read_avro_request_rate
          consumer.topic.read-avro.request-size-avg:
            metric_type: gauge
            alias: kafka-rest.read_avro_request_avg
          consumer.topic.read-avro.response-rate:
            metric_type: gauge
            alias: kafka-rest.read_avro_response_rate
