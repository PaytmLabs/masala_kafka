instances:
  <% @instances.each do |i| -%>
  - host: <%= i['host'] %>
    port: <%= i['port'] %>
    <% if i['name'] -%>
    name: <%= i['name'] %>
    <% end -%>
    <% if i['user'] -%>
    user: <%= i['user'] %>
    <% end -%>
    <% if i['password'] -%>
    password: <%= i['password'] %>
    <% end -%>
    <% if i['process_name_regex'] and i['tools_jar_path'] -%>
    process_name_regex: <%= i['process_name_regex'] %> # Instead of specifying a host, and port. The agent can connect using the attach api.
                                                       # This requires the JDK to be installed and the path to tools.jar to be set below.
    tools_jar_path: <%= i['tools_jar_path'] %>
    <% end -%>
    <% if i['java_bin_path'] -%>
    java_bin_path: <%= i['java_bin_path'] %> #Optional, should be set if the agent cannot find your java executable
    <% end -%>
    <% if i['trust_store_path'] -%>
    trust_store_path: <%= i['trust_store_path'] %> # Optional, should be set if ssl is enabled
    <% end -%>
    <% if i['trust_store_password'] -%>
    trust_store_password: <%= i['trust_store_password'] %>
    <% end -%>
    <% if i.key?('tags') -%>
    tags:
      <% i['tags'].each do |k, v| -%>
      <%= k %>: <%= v %>
      <% end -%>
    <% end -%>
  <% end -%>

init_config:
  is_jmx: true

  conf:
    - include:
        domain: 'kafka.schema.registry'
        bean: 'kafka.schema.registry:type=jetty-metrics'
        attribute:
          connections-active:
            metric_type: gauge
            alias: schema-registry.con_active
          connections-accepted-rate:
            metric_type: gauge
            alias: schema-registry.con_acc_rate
    - include:
        domain: 'kafka.schema.registry'
        bean: 'kafka.schema.registry:type=jersey-metrics'
        attribute:
          schemas.ids.get-schema.request-rate:
            metric_type: gauge
            alias: schema-registry.get-schema-rate
          schemas.ids.get-schema.request-latency-avg:
            metric_type: gauge
            alias: schema-registry.get-schema-latency
          compatibility.subjects.versions.verify.request-rate:
            metric_type: gauge
            alias: schema-registry.compat-verify-rate
          compatibility.subjects.versions.verify.request-latency-avg:
            metric_type: gauge
            alias: schema-registry.compat-verify-latency
          subjects.get-schema.request-rate:
            metric_type: gauge
            alias: schema-registry.sub-get-schema-rate
          subjects.get-schema.request-latency-avg:
            metric_type: gauge
            alias: schema-registry.sub-get-schema-latency
          subjects.versions.get-schema.request-rate:
            metric_type: gauge
            alias: schema-registry.sub-ver-get-schema-rate
          subjects.versions.get-schema.request-latency-avg:
            metric_type: gauge
            alias: schema-registry.sub-ver-get-schema-latency
 
