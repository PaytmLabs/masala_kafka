#!/bin/sh
<%# coding: UTF-8%>
# Auto-generated by Chef, do not edit!
### BEGIN INIT INFO
# Provides: confluent-proxy
# Short-Description: Confluent REST Proxy
# Default-Start: 3 4 5
# Default-Stop: 0 1 2 6
# Required-Start:
# Required-Stop:
# Should-Start:
# Should-Stop:
### END INIT INFO

USER=<%= node["kafka"]["user"] %>
SLEEP_TIME=5
CURRENT_WAIT=0
TIMEOUT=<%= node["kafka"]["shutdown_timeout"] %>

<% if node["confluent"]["version"] < 2.0 %>
MAIN_CLASS=io.confluent.kafkarest.Main
<% else %>
MAIN_CLASS=io.confluent.kafkarest.KafkaRestMain
<% end %>

# Setup environment variables
SETUP_ENV=""
<% node["confluent"]["proxy"]["env"].each do |k, v| -%>
SETUP_ENV="$SETUP_ENV <%= k %>=\"<%= v %>\" "
<% end -%>

# We have to pipe STDOUT here otherwise it will print logs when running script
START_SERVER_CMD="$SETUP_ENV nohup <%= node['confluent']['install_dir'] %>/bin/kafka-rest-start <%= node['confluent']['install_dir'] %>/etc/kafka-rest/kafka-rest.properties  >> <%= node['confluent']['proxy']['stdout'] %>  2>> <%= node['confluent']['proxy']['stderr'] %> &"

# We have to pipe STDOUT here otherwise it will print logs when running script
STOP_SERVER_CMD="<%= node['confluent']['install_dir'] %>/bin/kafka-rest-stop >> <%= node['confluent']['proxy']['stdout'] %>  2>> <%= node['confluent']['proxy']['stderr'] %>"

start() {
  findPid
  
  if [ "" = "$FOUND_PID" ]; then
    su -l $USER -c "$START_SERVER_CMD"
      
    if [ $? -ne 0 ]; then
      echo "Error starting Confluent REST Proxy"
      exit 1
    fi
      
    echo "Confluent REST Proxy successfully started"
      
  else
    echo "Confluent REST Proxy is already running"
  fi
}

stop() {
  findPid
  if [ -z "$FOUND_PID" ]; then
    echo "Confluent REST Proxy is not running, nothing to stop"
  else
    
    while [ -n "$FOUND_PID" ]; 
    do
      echo "Attempting to shutdown Confluent REST Proxy..."
      su -l $USER -c "$STOP_SERVER_CMD"
      
      if [ $? -ne 0 ]; then
        echo "Error stopping Confluent REST Proxy"
        exit 1
      fi
      
      sleep $SLEEP_TIME
      CURRENT_WAIT=$CURRENT_WAIT+$SLEEP_TIME
      if [ $CURRENT_WAIT -gt $TIMEOUT ]; then
        echo "Timed out waiting for Confluent REST Proxy to stop"
        exit 1
      fi
      findPid
    done
      
    echo "Stopped Confluent REST Proxy"
      
  fi
}

status() {
  findPid
  if [ -z "$FOUND_PID" ]; then
    echo "Confluent REST Proxy is not running" ; exit 1
  else
    echo "Confluent REST Proxy is running : $FOUND_PID" 
  fi
}

findPid() {
  FOUND_PID=$(pgrep -u $USER -f $MAIN_CLASS)
}

case "$1" in
  start)
    start
  ;;
  stop)
    stop
  ;;
  restart)
    stop
    start
  ;;
  status)
    status
  ;;
  *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
esac

exit 0
